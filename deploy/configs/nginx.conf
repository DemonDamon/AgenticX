events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器配置
    upstream postgres_backend {
        server postgres:5432;
    }

    upstream redis_backend {
        server redis:6379;
    }

    upstream mongodb_backend {
        server mongodb:27017;
    }

    upstream milvus_backend {
        server milvus:19530;
    }

    upstream qdrant_backend {
        server qdrant:6333;
    }

    upstream neo4j_backend {
        server neo4j:7687;
    }

    upstream minio_backend {
        server minio:9000;
    }

    upstream grafana_backend {
        server grafana:3000;
    }

    upstream prometheus_backend {
        server prometheus:9090;
    }

    upstream jaeger_backend {
        server jaeger:16686;
    }

    # HTTP服务器配置
    server {
        listen 80;
        server_name localhost;

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # PostgreSQL代理 (仅用于健康检查)
        location /postgres/ {
            proxy_pass http://postgres_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redis代理 (仅用于健康检查)
        location /redis/ {
            proxy_pass http://redis_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana代理
        location /grafana/ {
            proxy_pass http://grafana_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
        }

        # Prometheus代理
        location /prometheus/ {
            proxy_pass http://prometheus_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Jaeger代理
        location /jaeger/ {
            proxy_pass http://jaeger_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # MinIO代理
        location /minio/ {
            proxy_pass http://minio_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 默认页面
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            
            # 如果没有找到文件，返回服务状态页面
            try_files $uri $uri/ @fallback;
        }

        # 回退处理
        location @fallback {
            return 200 'AgenticX Services Status\n\nAvailable endpoints:\n- /health - Health check\n- /grafana/ - Grafana dashboard\n- /prometheus/ - Prometheus metrics\n- /jaeger/ - Jaeger tracing\n- /minio/ - MinIO object storage\n';
            add_header Content-Type text/plain;
        }
    }

    # HTTPS服务器配置 (如果需要SSL)
    # server {
    #     listen 443 ssl;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #
    #     # 其他配置与HTTP相同
    # }
} 